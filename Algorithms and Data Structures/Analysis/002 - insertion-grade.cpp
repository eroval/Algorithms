/* Косвено подреждане на стойности от вектор в ненамаляващ ред: самият вектор не се изменя,
   а образуваме вектор от индекси, чиито елементи показват в какъв ред трябва да бъдат взети
   членовете на дадения вектор, за да се окажат въа възходящ ред.  В този смисъл вторият
   вектор е класиране на първия.
   Например, ако даденият вектор е А = 5 2 9 3 6 2, неговото класиране е Б = 1 5 3 0 4 2,
   тъй като е изпълнено
        А[Б[0]] = А[1] = 2,
        А[Б[1]] = А[5] = 2,
        А[Б[2]] = А[3] = 3,
        А[Б[3]] = А[0] = 5,
        А[Б[4]] = А[4] = 6,
        А[Б[5]] = А[2] = 9.

   За да се получи класирането на вектор, всъщност на подреждане се подлага не самият той,
   а редицата 0 1 2 ... от индекси: сравняваме елементите на дадения вектор, а разместваме
   членовете на редицата от индекси.

   Ако класираме елементите на класирането на вектор, получаваме също полезен резултат.
   Ако А е вектор от какви да е числа, Б – неговото класиране, а В – класирането на Б,
   елементите на В сочат местата на съответните елементи на А във възходящата подредба:
   за всеки индекс i числото А[i] в подредбата заема място В[i].  Например, ако както
   по-горе А = 5 2 9 3 6 2, класирането на А е Б = 1 5 3 0 4 2, а класирането на Б е
   В = 3 0 5 2 4 1.  Следователно в подредбата 2 2 3 5 6 9 на А
        А[0] = 5 заема място В[0] = 3,
        А[1] = 2 заема място В[1] = 0,
        А[2] = 9 заема място В[2] = 5,
        А[3] = 3 заема място В[3] = 2,
        А[4] = 6 заема място В[4] = 4,
        А[5] = 2 заема място В[5] = 1.

   Б и В са взаимнообратни пермутации на множеството {0,1,...,|А|–1} и всяко от тях
   е класиране на другото.  Ако самото А е пермутация на {0,1,...,|А|–1}, А и Б са
   взаимнообратни пермутации и В съвпада с А.

   Конкретният метод на подреждане не е съществен за свойствата на класиращия индексен
   вектор.  В програмата по-долу процедурата insertionGrade() е подобна на insertionSort()
   от файла insertion-sort-templated.cpp: тя реализира подреждане чрез вмъкване и също е
   определена като шаблон с параметър – типът на елементите на вектора. */

#include <iostream>
#include <vector>

using namespace std;

// Намиране на класиране на вектор a във вектор b.
template <typename T>
void insertionGrade(vector<T> & a, vector<int> & b, bool cmp(T,T)) {
  int n = a.size();
  b.resize(n);
  for (int i = 0; i < n; ++i) b[i] = i;
  for (int i = 1; i < n; ++i) {
    T x = a[i];
    int j;
    for (j = i-1; j >= 0 && cmp(x,a[b[j]]); --j)
      b[j+1] = b[j];
    b[j+1] = i;
  }
}

bool compare(int p, int q) { return p < q; }

int main() {
  vector<int> u, v, w;
  for (int x; cin >> x;) u.push_back(x);   // четене на числата
  insertionGrade(u,v,compare);             // класиране на u във v
  insertionGrade(v,w,compare);             // класиране на v в w
  for (auto x : v) cout << x << ' ';       // извеждане на класирането
  cout << endl;
  for (auto x : w) cout << x << ' ';       // извеждане на класирането на класирането
  cout << endl;
  for (auto x : v) cout << u[x] << ' ';    // извеждане на подредения вариант на u
  cout << endl;
}
