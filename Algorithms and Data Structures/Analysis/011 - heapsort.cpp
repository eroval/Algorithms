#include <iostream>
#include <vector>
#include <ctime>

using namespace std;

// Поправяне на пирамида.
// Използва се и за включване в нея на нова стойност, стояща в някой от възлите, но не на мястото си.
//     a – хранилището на пирамидата
//     p – връх на (под)пирамидата, чиято стойност не е на мястото си и се спуска, докато го заеме
//     q – мястото след последния елемент на пирамидата
template <typename T, typename C = std::less<>>
void heapdn(vector<T> & a, unsigned p, unsigned q, C less = C()) {
  T t = a[p];                          // t = най-горния елемент
  for (;;) {
    unsigned j = 2*p+1, j1 = j+1;        // j сочи левия наследник на p (ако такъв има)
    if (j1 < q && less(a[j],a[j1])) j = j1;  // ако има десен наследник и той е по-голям от левия, j сочи него
    if (j >= q || !less(t,a[j])) break;      // ако p няма наследници или избраният наследник ≤t: спираме
    a[p] = a[j];                         // наследникът заема мястото на родителя си (който е по-малък от него)
    p = j;                               // p сочи освободеното място на наследника
  }
  a[p] = t;                            // t заема подходящото място
}

// Подреждане на съдържанието на вектор чрез пирамида
template <typename T, typename C = std::less<>>
void heapsort(vector<T> & a, C less = C()) {
  unsigned n = a.size();
  if (n <= 1) return;
  unsigned q = n;
  for (unsigned p = n/2; p > 0;)       // построяване на пирамида от съдържанието на вектора
    heapdn(a,--p,q,less);
  for (;;) {
    swap(a[0],a[--q]);   // най-големият отива на мястотото си чрез обмен с този, който го заема
    if (q == 1) break;
    heapdn(a,0,q,less);  // възстановяване на пирамидата от оставащите стойности
  }
}

// Пример за подреждане чрез пирамида
int main() {
  vector<int> a;
  for (int x; cin >> x;) a.push_back(x);   // четене на числата
// Подреждане и измерване на времето, за което става това.
  auto t = time(nullptr);
  heapsort(a,greater<>());                 // подреждане – в случая в низходящ ред
  cout << (time(nullptr)-t) << " sec" << endl;
#if 0     // ако трябва да се печата подредената редица, 0 се заменя с 1
  for (auto x : a) cout << x << ' ';
  cout << endl;
#endif
}
